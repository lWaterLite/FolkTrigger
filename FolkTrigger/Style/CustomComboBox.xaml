<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <SolidColorBrush x:Key="ComboBoxBackground" Color="#2b2b2b" />
    <SolidColorBrush x:Key="BorderColorBrush" Color="#6a6a6a" />

    <Style x:Key="CustomComboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="Background" Value="{StaticResource ComboBoxBackground}" />
        <Setter Property="MinWidth" Value="64" />
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ComboBoxItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ComboBoxItem">
                                <Border Name="back" Padding="8 4 0 4"
                                        Background="{StaticResource ComboBoxBackground}" BorderThickness="0">
                                    <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="back" Property="Background" Value="#5f5f5f" />
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="back" Property="Background" Value="#5f5f5f" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Border Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            BorderThickness="1"
                            BorderBrush="{StaticResource BorderColorBrush}"
                            CornerRadius="2"
                            Background="{TemplateBinding Background}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="3*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid Column="0" x:Name="Grid">
                                <ToggleButton Content="{TemplateBinding Text}"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left"
                                              Foreground="{TemplateBinding Foreground}"
                                              Background="{TemplateBinding Background}"
                                              IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropDownOpen, Mode=TwoWay}">
                                    <ToggleButton.Style>
                                        <Style TargetType="ToggleButton">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ToggleButton">
                                                        <Border Background="Transparent" Padding="12 4 16 4">
                                                            <TextBlock Foreground="{TemplateBinding Foreground}"
                                                                       Text="{TemplateBinding Content}"
                                                                       VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                                                       HorizontalAlignment="{TemplateBinding HorizontalAlignment}" />
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                            </Grid>
                            <Grid Grid.Column="1">
                                <ToggleButton
                                    IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    Foreground="{TemplateBinding Foreground}"
                                    ClickMode="Press">
                                    <ToggleButton.Style>
                                        <Style TargetType="ToggleButton">
                                            <Setter Property="Background" Value="{StaticResource ComboBoxBackground}" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ToggleButton">
                                                        <Border Background="{TemplateBinding Background}"
                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                Padding="0 0 6 0">
                                                            <Grid>
                                                                <TextBlock Foreground="{TemplateBinding Foreground}"
                                                                           FontFamily="pack://application:,,,/Assets/Font/#folktrigger"
                                                                           x:Name="arrow_tb" Text="&#xe688;"
                                                                           HorizontalAlignment="Center"
                                                                           VerticalAlignment="Center"
                                                                           RenderTransformOrigin="0.5,0.5">
                                                                    <TextBlock.RenderTransform>
                                                                        <TransformGroup>
                                                                            <ScaleTransform />
                                                                            <SkewTransform />
                                                                            <RotateTransform />
                                                                            <TranslateTransform />
                                                                        </TransformGroup>
                                                                    </TextBlock.RenderTransform>
                                                                </TextBlock>
                                                            </Grid>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsChecked" Value="True" />
                                                            <EventTrigger RoutedEvent="Checked">
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <DoubleAnimationUsingKeyFrames
                                                                            Storyboard.TargetName="arrow_tb"
                                                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                                                                            <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                                Value="0" />
                                                                            <EasingDoubleKeyFrame
                                                                                KeyTime="00:00:00.2000000" Value="180" />
                                                                        </DoubleAnimationUsingKeyFrames>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </EventTrigger>

                                                            <EventTrigger RoutedEvent="Unchecked">
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <DoubleAnimationUsingKeyFrames
                                                                            Storyboard.TargetName="arrow_tb"
                                                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                                                                            <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                                Value="180" />
                                                                            <EasingDoubleKeyFrame
                                                                                KeyTime="00:00:00.2000000" Value="0" />
                                                                        </DoubleAnimationUsingKeyFrames>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </EventTrigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                            </Grid>
                            <Popup Grid.Column="0" IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom"
                                   x:Name="Popup"
                                   Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
                                <Border CornerRadius="1" MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                        MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown"
                                        SnapsToDevicePixels="True">
                                    <Border.Effect>
                                        <DropShadowEffect Color="Black" BlurRadius="2" ShadowDepth="0" Opacity="0.5" />
                                    </Border.Effect>
                                    <ScrollViewer Margin="4,6,4,6" Style="{DynamicResource ScrollViewerStyle}"
                                                  MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                  SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto"
                                                  VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                                        <!-- StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True -->
                                        <StackPanel IsItemsHost="True"
                                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                                    Background="White" />
                                    </ScrollViewer>
                                </Border>
                            </Popup>

                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>